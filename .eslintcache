[{"C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\team-5-travel\\src\\components\\MapComp.js":"1","C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\team-5-travel\\src\\components\\Page.js":"2","C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\team-5-travel\\src\\index.js":"3","C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\team-5-travel\\src\\context\\AppContext.js":"4","C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\team-5-travel\\src\\components\\Header.js":"5","C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\team-5-travel\\src\\components\\Spinner.js":"6","C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\team-5-travel\\src\\App.js":"7","C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\team-5-travel\\src\\components\\ListaPosti.js":"8","C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\team-5-travel\\src\\components\\Posto.js":"9"},{"size":1786,"mtime":1606731179993,"results":"10","hashOfConfig":"11"},{"size":686,"mtime":1606731098285,"results":"12","hashOfConfig":"11"},{"size":311,"mtime":1606514308150,"results":"13","hashOfConfig":"11"},{"size":896,"mtime":1606597068257,"results":"14","hashOfConfig":"11"},{"size":775,"mtime":1606478043478,"results":"15","hashOfConfig":"11"},{"size":212,"mtime":1606470943131,"results":"16","hashOfConfig":"11"},{"size":332,"mtime":1606514335562,"results":"17","hashOfConfig":"11"},{"size":3234,"mtime":1606730957716,"results":"18","hashOfConfig":"11"},{"size":3397,"mtime":1606730961612,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},"1yy661k",{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"29"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"23"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},"C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\team-5-travel\\src\\components\\MapComp.js",["45","46","47"],"import React, { useContext, useEffect } from \"react\";\r\nimport 'leaflet/dist/leaflet.css'\r\nimport '../assets/MapComp.css'\r\nimport { AppContext } from \"../context/AppContext\";\r\nimport {MapContainer, Marker, Popup, TileLayer} from \"react-leaflet\"\r\nimport {Card, Button, Breadcrumb} from 'react-bootstrap'\r\n\r\nconst MapComp = () => {\r\n\r\n  const { data } = useContext(AppContext)\r\n  const position = [51.505, -0.09]\r\n  return (\r\n    <>\r\n   \r\n  \r\n    <div className=\"mapComp\">\r\n\r\n      <Card className='mapComp_cardContainer'>\r\n        <div className=\"mapComp_cardContainer_mapWrapper\">\r\n      <MapContainer style={{width: 800, height:300, marginTop:30}}center={[51.505, -0.09]} zoom={13} scrollWheelZoom={false}>\r\n      \r\n      \r\n      <TileLayer\r\n      attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n      url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n    />\r\n    <Marker position={[51.505, -0.09]}>\r\n      <Popup>\r\n        A pretty CSS3 popup. <br /> Easily customizable.\r\n      </Popup>\r\n    </Marker>\r\n  </MapContainer>\r\n        </div>\r\n     <Card.Body>\r\n      <Card.Title className=\"cardTitle\">{data.title}</Card.Title>\r\n        <Breadcrumb className=\"breadCrumb\">\r\n            {data.map((el, index) =>(\r\n              <h1 key={index}>{el}</h1>\r\n             ) )}\r\n            <Breadcrumb.Item active>Siracusa</Breadcrumb.Item>\r\n            <Breadcrumb.Item active>Vendicari</Breadcrumb.Item>\r\n            <Breadcrumb.Item active>Siracusa</Breadcrumb.Item>\r\n        </Breadcrumb>\r\n        <i><h5>Dal {data.dateFrom} al {data.dateTo} </h5></i>\r\n        <i><h5>2 adulti</h5></i>\r\n        <i><h5>7 Giorni - 6 Notti</h5></i>\r\n      \r\n      </Card.Body>\r\n      </Card>\r\n\r\n\r\n    </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n  </>\r\n  )\r\n}\r\n\r\nexport default MapComp\r\n",["48","49"],"C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\team-5-travel\\src\\components\\Page.js",["50"],"import React, { useContext } from 'react'\r\n\r\n\r\n\r\nimport '../assets/Posti.css';\r\n\r\n//importazione componenti\r\nimport Header from './Header'\r\nimport Spinner from './Spinner'\r\nimport MapComp from './MapComp'\r\nimport ListaPosti from './ListaPosti'\r\n//importazione provider\r\nimport AppProvider from '../context/AppContext'\r\n\r\nimport { AppContext } from \"../context/AppContext\";\r\n\r\nfunction Page() {\r\n  const { data } = useContext(AppContext)\r\n\r\n  return (\r\n\r\n    <div className=\"Page\">\r\n\r\n      {data\r\n        ?\r\n        <>\r\n        <Header />\r\n        <MapComp />\r\n        <ListaPosti />\r\n        </>\r\n\r\n        :\r\n        <Spinner />\r\n      }\r\n\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default Page","C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\team-5-travel\\src\\index.js",[],["51","52"],"C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\team-5-travel\\src\\context\\AppContext.js",[],"C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\team-5-travel\\src\\components\\Header.js",["53"],"import React, { useContext, useEffect } from \"react\";\n\nimport { AppContext } from \"../context/AppContext\";\n\n\nconst Header = () => {\n\n  const { data } = useContext(AppContext)\n\n  const bgUrl = data.images[0].image\n\n  return (\n    <div className=\"vh-100 container-fluid Header\" style={{\n      background: `url(${bgUrl}`, backgroundSize: \"cover\",\n      backgroundRepeat: \"no-repeat\"\n    }}>\n      <div className=\"row\">\n        <div className=\"vh-100 overlay\">\n          <div className=\"Logo\"></div>\n          <div className=\"title\">\n            <h1> {data.customerName} <br /> {data.title} </h1>\n            <button className=\"btn btn-primary\">\n              scopri di più\n        </button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n  )\n}\n\nexport default Header\n","C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\team-5-travel\\src\\components\\Spinner.js",[],"C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\team-5-travel\\src\\App.js",["54"],"C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\team-5-travel\\src\\components\\ListaPosti.js",["55","56","57","58","59","60","61"],"import React, { useState, useEffect, useContext } from \"react\";\n\nimport { Accordion, Card } from 'react-bootstrap';\n\nimport { AppContext } from \"../context/AppContext\";\n\nimport Posto from './Posto'\n\n// function AccordionToogle({ children, eventKey, callback }) {\n//   const toggle = useAccordionToggle(\n//     eventKey,\n//     () => callback && callback(eventKey),\n//   )\n\n\n//   return (\n//     <div className=\"card-header AccordionCardHeader\" onClick={toggle}>\n//       {children}\n//     </div>\n//   )\n// }\n\n\n\n\n\n\n\n\n\n\n\nconst ListaPosti = () => {\n\n  const { data } = useContext(AppContext)\n  const giorni = data.rows\n  const [posti, setPosti] = useState([])\n  const [activeKey, setActiveKey] = useState()\n\n  const unisciPosti = (arr) => {\n    const placesArray = []\n    let a = 0\n    let currPosto = arr[0].places[0].name\n    let datePosto = []\n    arr.map((item, index) => {\n      if (index + 1 < giorni.length) {\n        const nextPosto = arr[index + 1].places[0].name\n\n        datePosto.push(item.dayDate)\n       // console.log(\"  a:\", a, \"i\", index, \"     currPosto \", currPosto, \"nextPosto \", nextPosto)\n        if (currPosto !== nextPosto) {\n          const b = index + 1\n        //  console.log(\"slice from \", a, \" to \", index + 1, \": \", arr.slice(a, b))\n\n          //arr.slice(a, b) è la porzione di array che contiene i dati giorni consecutivi con lo stesso posto\n\n          placesArray.push({\n            \"nomePosto\": currPosto,\n            \"datePosto\": datePosto,\n            \"infoPosto\": arr.slice(a, b)\n          })\n          a = index + 1\n          datePosto = []\n          currPosto = nextPosto\n        }\n      }\n      else {\n        datePosto.push(item.dayDate)\n        placesArray.push({\n          \"nomePosto\": currPosto,\n          \"datePosto\": datePosto,\n          \"infoPosto\": arr.slice(a)\n        })\n        datePosto = []\n      }\n    })\n    return placesArray\n  }\n\n  const ordinaDataArray = (arr, type) => {\n    arr.sort(function (a, b) {\n      const nameA = new Date(a.dayDate);\n      const nameB = new Date(b.dayDate);\n      if (nameA < nameB) {\n        if (type === \"asc\")\n          return -1;\n        else\n          return 1\n      }\n      if (nameA > nameB) {\n        if (type === \"asc\")\n          return 1\n        else\n          return -1\n      }\n      return 0;\n    })\n    return arr\n  }\n\n  const stampaControllo = (arr) => {\n    arr.map(el => {\n      console.log(\"_____________________________________________\")\n      console.log(\"NomePosto: \", el.nomePosto, \"  DatePosto: \", el.datePosto)\n      console.log(\"InfoPosto:\")\n      el.infoPosto.map(ol => (\n        console.log(\"      Presso \", ol.places[0].name, \" il \", ol.dayDate, \" con id \", ol.id)\n      ))\n    })\n  }\n\n\n\n  useEffect(() => {\n    setPosti(unisciPosti(ordinaDataArray(giorni, \"asc\")))\n    //  stampaControllo(posti)\n  }, [])\n\n\n  return (\n    <div className=\"ListaPosti\">\n\n\n      <div className=\"row\">\n        <div className=\"col\">\n\n\n          {posti.map((posto, index) => (\n\n            <Accordion defaultActiveKey={posto.infoPosto[0].id} key={index} >\n              <Posto posto={posto} eventKey={posto.infoPosto[0].id} />\n            </Accordion>\n\n          ))}\n\n\n        </div>\n      </div>\n\n\n\n\n    </div>\n  )\n}\n\nexport default ListaPosti\n","C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\team-5-travel\\src\\components\\Posto.js",["62","63","64","65","66"],"\r\nimport React, { useState, useEffect, useContext } from \"react\";\r\n\r\nimport { Accordion, Card } from 'react-bootstrap';\r\n\r\nimport { AppContext } from \"../context/AppContext\";\r\n\r\n\r\nfunction Posto(props) {\r\n    const { eventKey, posto } = props\r\n    const { nomePosto, datePosto, infoPosto } = posto\r\n    const [arrow, setArrow] = useState(true)\r\n\r\n    function convertDate(inputFormat) {\r\n        function pad(s) { return (s < 10) ? '0' + s : s; }\r\n        var d = new Date(inputFormat)\r\n        return [pad(d.getDate()), pad(d.getMonth() + 1), d.getFullYear()].join('/')\r\n    }\r\n\r\n    const groupData = (date) => {\r\n\r\n        const monthNames = [\"Gennaio\", \"Febbraio\", \"Marzo\", \"Aprile\", \"Maggio\", \"Giugno\",\r\n            \"Luglio\", \"Agosto\", \"Setteombre\", \"Ottobre\", \"Novembre\", \"Dicembre\"\r\n        ]\r\n\r\n        const first = new Date(date[0])\r\n\r\n        if (date.length > 1) {\r\n\r\n            const last = new Date(date[date.length - 1])\r\n\r\n            if (first.getMonth() === last.getMonth())\r\n                return first.getDate() + \" - \" + last.getDate() + \" \" + monthNames[first.getMonth()] + \" \" + first.getFullYear()\r\n\r\n            else\r\n                return first.getDate() + \" \" + monthNames[first.getMonth()] + \" \" + first.getFullYear() + \" - \" +\r\n                    last.getDate() + \" \" + monthNames[last.getMonth()] + \" \" + last.getFullYear()\r\n\r\n        }\r\n        else {\r\n            return first.getDate() + \" \" + monthNames[first.getMonth()] + \" \" + first.getFullYear()\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n       // console.log(infoPosto[0].days[0].images[0].image)\r\n\r\n    })\r\n\r\n    /*\r\n    giorno:\r\n    id\r\n    places.name: nome posto\r\n    position: geografia\r\n    dayDate: data del giorno\r\n    days[0].images.image: sfondo\r\n    */\r\n\r\n    /*\r\n    -parte iniziale\r\n    titolo + dayDate\r\n    sfondo grande\r\n    days[0].description\r\n\r\n    - trasporti\r\n\r\n    */\r\n    return (\r\n\r\n        <Card>\r\n\r\n            <Accordion.Toggle as={Card.Header} eventKey={eventKey} onClick={() => { setArrow(!arrow) }}>\r\n                <Card.Header className=\"accordionCardHeader\" >\r\n                    <div>\r\n                        <span>{posto.nomePosto}\r\n                            <h2 className=\"ml-3 text-gray\">\r\n                                {groupData(posto.datePosto)}\r\n                            </h2>\r\n                        </span>\r\n                        {arrow ? <i className=\"fa fa-angle-up text-gray float-right\"></i> : <i className=\"fa fa-angle-down text-gray float-right\"></i>}\r\n                    </div>\r\n                </Card.Header>\r\n            </Accordion.Toggle>\r\n\r\n\r\n            <Accordion.Collapse eventKey={eventKey}>\r\n\r\n                <Card.Body>\r\n                    <h1>del asddas {eventKey}</h1>\r\n                    \r\n                       {infoPosto.map((info, index) => (\r\n                        <div key={index}>\r\n                            <h1>ddddddddddd</h1>\r\n                            <div style={{height:300,\r\n                            backgroundSize: \"cover\",\r\n                            backgroundRepeat: \"no-repeat\",\r\n                            backgroundImage:`url(${infoPosto[0].days[0].images[0].image}`\r\n                            }}></div>\r\n                        </div>\r\n\r\n\r\n                       ))}\r\n                </Card.Body>\r\n\r\n            </Accordion.Collapse>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Posto\r\n",{"ruleId":"67","severity":1,"message":"68","line":1,"column":29,"nodeType":"69","messageId":"70","endLine":1,"endColumn":38},{"ruleId":"67","severity":1,"message":"71","line":6,"column":15,"nodeType":"69","messageId":"70","endLine":6,"endColumn":21},{"ruleId":"67","severity":1,"message":"72","line":11,"column":9,"nodeType":"69","messageId":"70","endLine":11,"endColumn":17},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"67","severity":1,"message":"77","line":13,"column":8,"nodeType":"69","messageId":"70","endLine":13,"endColumn":19},{"ruleId":"73","replacedBy":"78"},{"ruleId":"75","replacedBy":"79"},{"ruleId":"67","severity":1,"message":"68","line":1,"column":29,"nodeType":"69","messageId":"70","endLine":1,"endColumn":38},{"ruleId":"67","severity":1,"message":"80","line":1,"column":17,"nodeType":"69","messageId":"70","endLine":1,"endColumn":27},{"ruleId":"67","severity":1,"message":"81","line":3,"column":21,"nodeType":"69","messageId":"70","endLine":3,"endColumn":25},{"ruleId":"67","severity":1,"message":"82","line":38,"column":10,"nodeType":"69","messageId":"70","endLine":38,"endColumn":19},{"ruleId":"67","severity":1,"message":"83","line":38,"column":21,"nodeType":"69","messageId":"70","endLine":38,"endColumn":33},{"ruleId":"84","severity":1,"message":"85","line":45,"column":27,"nodeType":"86","messageId":"87","endLine":45,"endColumn":29},{"ruleId":"67","severity":1,"message":"88","line":101,"column":9,"nodeType":"69","messageId":"70","endLine":101,"endColumn":24},{"ruleId":"84","severity":1,"message":"85","line":102,"column":16,"nodeType":"86","messageId":"87","endLine":102,"endColumn":18},{"ruleId":"89","severity":1,"message":"90","line":117,"column":6,"nodeType":"91","endLine":117,"endColumn":8,"suggestions":"92"},{"ruleId":"67","severity":1,"message":"80","line":2,"column":38,"nodeType":"69","messageId":"70","endLine":2,"endColumn":48},{"ruleId":"67","severity":1,"message":"93","line":6,"column":10,"nodeType":"69","messageId":"70","endLine":6,"endColumn":20},{"ruleId":"67","severity":1,"message":"94","line":11,"column":13,"nodeType":"69","messageId":"70","endLine":11,"endColumn":22},{"ruleId":"67","severity":1,"message":"95","line":11,"column":24,"nodeType":"69","messageId":"70","endLine":11,"endColumn":33},{"ruleId":"67","severity":1,"message":"96","line":14,"column":14,"nodeType":"69","messageId":"70","endLine":14,"endColumn":25},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'position' is assigned a value but never used.","no-native-reassign",["97"],"no-negated-in-lhs",["98"],"'AppProvider' is defined but never used.",["97"],["98"],"'useContext' is defined but never used.","'Card' is defined but never used.","'activeKey' is assigned a value but never used.","'setActiveKey' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'stampaControllo' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'giorni' and 'unisciPosti'. Either include them or remove the dependency array.","ArrayExpression",["99"],"'AppContext' is defined but never used.","'nomePosto' is assigned a value but never used.","'datePosto' is assigned a value but never used.","'convertDate' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"100","fix":"101"},"Update the dependencies array to be: [giorni, unisciPosti]",{"range":"102","text":"103"},[2812,2814],"[giorni, unisciPosti]"]
