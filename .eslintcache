[{"C:\\Users\\Carmine\\Desktop\\CARMINE\\FRONT-END\\CORSO FRONT-END REACT\\LEZIONI CORSO\\REACT\\MY\\team-5-travel\\src\\components\\MapComp.js":"1","C:\\Users\\Carmine\\Desktop\\CARMINE\\FRONT-END\\CORSO FRONT-END REACT\\LEZIONI CORSO\\REACT\\MY\\team-5-travel\\src\\components\\ListaPosti.js":"2","C:\\Users\\Carmine\\Desktop\\CARMINE\\FRONT-END\\CORSO FRONT-END REACT\\LEZIONI CORSO\\REACT\\MY\\team-5-travel\\src\\components\\Tariffe.js":"3","C:\\Users\\Carmine\\Desktop\\CARMINE\\FRONT-END\\CORSO FRONT-END REACT\\LEZIONI CORSO\\REACT\\MY\\team-5-travel\\src\\index.js":"4","C:\\Users\\Carmine\\Desktop\\CARMINE\\FRONT-END\\CORSO FRONT-END REACT\\LEZIONI CORSO\\REACT\\MY\\team-5-travel\\src\\components\\Page.js":"5","C:\\Users\\Carmine\\Desktop\\CARMINE\\FRONT-END\\CORSO FRONT-END REACT\\LEZIONI CORSO\\REACT\\MY\\team-5-travel\\src\\components\\Posto.js":"6"},{"size":1793,"mtime":1606731547728,"results":"7","hashOfConfig":"8"},{"size":3228,"mtime":1606730243794,"results":"9","hashOfConfig":"8"},{"size":2697,"mtime":1606934846299,"results":"10","hashOfConfig":"8"},{"size":299,"mtime":1606730243834,"results":"11","hashOfConfig":"8"},{"size":713,"mtime":1606730485762,"results":"12","hashOfConfig":"8"},{"size":3142,"mtime":1606730243828,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"17"},"1ojbffe",{"filePath":"18","messages":"19","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"C:\\Users\\Carmine\\Desktop\\CARMINE\\FRONT-END\\CORSO FRONT-END REACT\\LEZIONI CORSO\\REACT\\MY\\team-5-travel\\src\\components\\MapComp.js",["29","30","31"],"import React, { useContext, useEffect } from \"react\";\nimport 'leaflet/dist/leaflet.css'\nimport '../assets/MapComp.css'\nimport { AppContext } from \"../context/AppContext\";\nimport {MapContainer, Marker, Popup, TileLayer} from \"react-leaflet\"\nimport {Card, Button, Breadcrumb} from 'react-bootstrap'\n\nconst MapComp = () => {\n\n  const { data } = useContext(AppContext)\n  const position = [51.505, -0.09]\n  \n  // for (let i=0; i<=data.rows.length; i++){\n  //   let filt = []\n  //   if (citta[i] !== citta[i+1]){\n  //     return filt.push(citta[i]);\n  //   }\n  return (\n    <>\n   \n  \n    <div className=\"mapComp\">\n\n      <Card className='mapComp_cardContainer'>\n        <div className=\"mapComp_cardContainer_mapWrapper\">\n      <MapContainer style={{width: 800, height:300, marginTop:30}}center={[51.505, -0.09]} zoom={13} scrollWheelZoom={false}>\n      \n      \n      <TileLayer\n      attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n      url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n    />\n    <Marker position={[51.505, -0.09]}>\n      <Popup>\n        A pretty CSS3 popup. <br /> Easily customizable.\n      </Popup>\n    </Marker>\n  </MapContainer>\n        </div>\n     <Card.Body>\n      <Card.Title className=\"cardTitle\">{data.title}</Card.Title>\n        <Breadcrumb className=\"breadCrumb\">\n            \n            <Breadcrumb.Item active>Siracusa</Breadcrumb.Item>\n            <Breadcrumb.Item active>Vendicari</Breadcrumb.Item>\n            <Breadcrumb.Item active>Siracusa</Breadcrumb.Item>\n        </Breadcrumb>\n        <i><h5>Dal {data.dateFrom} al {data.dateTo} </h5></i>\n        <i><h5>2 adulti</h5></i>\n        <i><h5>7 Giorni - 6 Notti</h5></i>\n      \n      </Card.Body>\n      </Card>\n\n\n    </div>\n\n\n\n\n\n\n  </>\n  )\n}\n\nexport default MapComp\n",["32","33"],"C:\\Users\\Carmine\\Desktop\\CARMINE\\FRONT-END\\CORSO FRONT-END REACT\\LEZIONI CORSO\\REACT\\MY\\team-5-travel\\src\\components\\ListaPosti.js",["34","35","36","37","38","39"],"C:\\Users\\Carmine\\Desktop\\CARMINE\\FRONT-END\\CORSO FRONT-END REACT\\LEZIONI CORSO\\REACT\\MY\\team-5-travel\\src\\components\\Tariffe.js",[],"C:\\Users\\Carmine\\Desktop\\CARMINE\\FRONT-END\\CORSO FRONT-END REACT\\LEZIONI CORSO\\REACT\\MY\\team-5-travel\\src\\index.js",[],"C:\\Users\\Carmine\\Desktop\\CARMINE\\FRONT-END\\CORSO FRONT-END REACT\\LEZIONI CORSO\\REACT\\MY\\team-5-travel\\src\\components\\Page.js",[],"C:\\Users\\Carmine\\Desktop\\CARMINE\\FRONT-END\\CORSO FRONT-END REACT\\LEZIONI CORSO\\REACT\\MY\\team-5-travel\\src\\components\\Posto.js",["40","41","42","43","44","45","46"],"\nimport React, { useState, useEffect, useContext } from \"react\";\n\nimport { Accordion, Card } from 'react-bootstrap';\n\nimport { AppContext } from \"../context/AppContext\";\n\n\nfunction Posto(props) {\n    const { eventKey, posto } = props\n    const { nomePosto, datePosto, infoPosto } = posto\n    const [arrow, setArrow] = useState(true)\n\n    function convertDate(inputFormat) {\n        function pad(s) { return (s < 10) ? '0' + s : s; }\n        var d = new Date(inputFormat)\n        return [pad(d.getDate()), pad(d.getMonth() + 1), d.getFullYear()].join('/')\n    }\n\n    const groupData = (date) => {\n\n        const monthNames = [\"Gennaio\", \"Febbraio\", \"Marzo\", \"Aprile\", \"Maggio\", \"Giugno\",\n            \"Luglio\", \"Agosto\", \"Setteombre\", \"Ottobre\", \"Novembre\", \"Dicembre\"\n        ]\n\n        const first = new Date(date[0])\n\n        if (date.length > 1) {\n\n            const last = new Date(date[date.length - 1])\n\n            if (first.getMonth() === last.getMonth())\n                return first.getDate() + \" - \" + last.getDate() + \" \" + monthNames[first.getMonth()] + \" \" + first.getFullYear()\n\n            else\n                return first.getDate() + \" \" + monthNames[first.getMonth()] + \" \" + first.getFullYear() + \" - \" +\n                    last.getDate() + \" \" + monthNames[last.getMonth()] + \" \" + last.getFullYear()\n\n        }\n        else {\n            return first.getDate() + \" \" + monthNames[first.getMonth()] + \" \" + first.getFullYear()\n        }\n    }\n\n    useEffect(() => {\n        console.log(infoPosto[0].days[0].images[0].image)\n\n    })\n\n    /*\n    giorno:\n    id\n    places.name: nome posto\n    position: geografia\n    dayDate: data del giorno\n    days[0].images.image: sfondo\n    */\n\n    /* \n    -parte iniziale\n    titolo + dayDate\n    sfondo grande\n    days[0].description\n\n    - trasporti\n\n    */\n    return (\n\n        <Card>\n\n            <Accordion.Toggle as={Card.Header} eventKey={eventKey} onClick={() => { setArrow(!arrow) }}>\n                <Card.Header className=\"accordionCardHeader\" >\n                    <div>\n                        <span>{posto.nomePosto}\n                            <h2 className=\"ml-3 text-gray\">\n                                {groupData(posto.datePosto)}\n                            </h2>\n                        </span>\n                        {arrow ? <i className=\"fa fa-angle-up text-gray float-right\"></i> : <i className=\"fa fa-angle-down text-gray float-right\"></i>}\n                    </div>\n                </Card.Header>\n            </Accordion.Toggle>\n\n\n            <Accordion.Collapse eventKey={eventKey}>\n\n                <Card.Body>\n                    <h1>del testo {eventKey}</h1>\n                    {infoPosto.map((info, index) => {\n\n                        <div key={index} style={{height:\"300px\", \n                            background: \"`url(${info.days[0].images[0].image}` cover no-repeat\"}}>\n                                \n                                <div className=\"row\">asd</div>\n                            </div> \n\n\n\n                    })}\n                </Card.Body>\n\n            </Accordion.Collapse>\n        </Card>\n    )\n}\n\nexport default Posto\n",{"ruleId":"47","severity":1,"message":"48","line":1,"column":29,"nodeType":"49","messageId":"50","endLine":1,"endColumn":38},{"ruleId":"47","severity":1,"message":"51","line":6,"column":15,"nodeType":"49","messageId":"50","endLine":6,"endColumn":21},{"ruleId":"47","severity":1,"message":"52","line":11,"column":9,"nodeType":"49","messageId":"50","endLine":11,"endColumn":17},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"47","severity":1,"message":"57","line":3,"column":21,"nodeType":"49","messageId":"50","endLine":3,"endColumn":25},{"ruleId":"47","severity":1,"message":"58","line":38,"column":10,"nodeType":"49","messageId":"50","endLine":38,"endColumn":19},{"ruleId":"47","severity":1,"message":"59","line":38,"column":21,"nodeType":"49","messageId":"50","endLine":38,"endColumn":33},{"ruleId":"60","severity":1,"message":"61","line":45,"column":27,"nodeType":"62","messageId":"63","endLine":45,"endColumn":29},{"ruleId":"60","severity":1,"message":"61","line":102,"column":16,"nodeType":"62","messageId":"63","endLine":102,"endColumn":18},{"ruleId":"64","severity":1,"message":"65","line":117,"column":6,"nodeType":"66","endLine":117,"endColumn":8,"suggestions":"67"},{"ruleId":"47","severity":1,"message":"68","line":2,"column":38,"nodeType":"49","messageId":"50","endLine":2,"endColumn":48},{"ruleId":"47","severity":1,"message":"69","line":6,"column":10,"nodeType":"49","messageId":"50","endLine":6,"endColumn":20},{"ruleId":"47","severity":1,"message":"70","line":11,"column":13,"nodeType":"49","messageId":"50","endLine":11,"endColumn":22},{"ruleId":"47","severity":1,"message":"71","line":11,"column":24,"nodeType":"49","messageId":"50","endLine":11,"endColumn":33},{"ruleId":"47","severity":1,"message":"72","line":14,"column":14,"nodeType":"49","messageId":"50","endLine":14,"endColumn":25},{"ruleId":"60","severity":1,"message":"61","line":90,"column":50,"nodeType":"62","messageId":"63","endLine":90,"endColumn":52},{"ruleId":"73","severity":1,"message":"74","line":93,"column":41,"nodeType":"75","messageId":"76","endLine":93,"endColumn":96},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'position' is assigned a value but never used.","no-native-reassign",["77"],"no-negated-in-lhs",["78"],"'Card' is defined but never used.","'activeKey' is assigned a value but never used.","'setActiveKey' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'giorni', 'posti', and 'unisciPosti'. Either include them or remove the dependency array.","ArrayExpression",["79"],"'useContext' is defined but never used.","'AppContext' is defined but never used.","'nomePosto' is assigned a value but never used.","'datePosto' is assigned a value but never used.","'convertDate' is defined but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","no-global-assign","no-unsafe-negation",{"desc":"80","fix":"81"},"Update the dependencies array to be: [giorni, posti, unisciPosti]",{"range":"82","text":"83"},[2806,2808],"[giorni, posti, unisciPosti]"]